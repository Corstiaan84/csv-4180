<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
         ToolsVersion="15.0"
         DefaultTargets="Build">

  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props"/>

  <PropertyGroup>
    <Configuration>Release</Configuration>
    <AppVersion>1.0.21</AppVersion>
  </PropertyGroup>

  <PropertyGroup>
    <SignFilePath Condition=" '$(SignFilePath)' == '' " >CodeSigning_2019-08-16.p12</SignFilePath>
  </PropertyGroup>
  
  <ItemGroup>
    <Platform Include="x86;x64" />
  </ItemGroup>

  <ItemGroup>
    <MsiFilePath Include="..\Csv4180.Installer.MSI\bin\x86\Release\en-US\CSV_4180.msi">
      <Platform>x86</Platform>
    </MsiFilePath>
    <MsiFilePath Include="..\Csv4180.Installer.MSI\bin\x64\Release\en-US\CSV_4180.msi">
      <Platform>x64</Platform>
    </MsiFilePath>
    <SetupFilePath Include="..\bin\Release\ProcessedMsi\CSV_4180_v$(AppVersion).exe" />
  </ItemGroup>

  <PropertyGroup>
    <IntermediateOutputPath>$(BaseIntermediateOutputPath)$(Configuration)\</IntermediateOutputPath>
    <!--<OutputPath>..\bin</OutputPath>-->
    <!--<CleanFile Condition=" '$(CleanFile)'=='' ">$(MSBuildProjectFile).FileListAbsolute.txt</CleanFile>-->
  </PropertyGroup>

  <Target Name="RebuildSolution">
    <!--<MSBuild Projects="..\CSV 4180.sln" Targets="Rebuild" Properties="Configuration=$(Configuration);Platform=%(Platform.Identity)" />-->
  </Target>
  <Target Name="PrepareObjDirectory">
    <Message Text="BaseIntermediateOutputPath: $(BaseIntermediateOutputPath)" Importance="low" />
    <Message Text="IntermediateOutputPath: $(IntermediateOutputPath)" Importance="low" />
    <Message Text="MsiFilePath: %(MsiFilePath.Identity)" Importance="low" />
    <MakeDir Directories="$(IntermediateOutputPath)"  Condition = "!Exists('$(IntermediateOutputPath)')"/>
  </Target>
  <Target Name="CopyMsiFiles" DependsOnTargets="PrepareObjDirectory">
    <ItemGroup>
      <ProcessedMsiFile Include="@(MsiFilePath)">
        <ProcessedFilePath>$(IntermediateOutputPath)%(Filename)_%(Platform)%(Extension)</ProcessedFilePath>
        <Platform>%(Platform)</Platform>
      </ProcessedMsiFile>
    </ItemGroup>
    <Copy SourceFiles="%(ProcessedMsiFile.Identity)" DestinationFiles="%(ProcessedFilePath)" />
  </Target>
  <Target Name="AssertSignPassword">
    <Error Condition="!Exists($(SignFilePath))" Text='The sign file "$(SignFilePath)" has not been found.' />
    <Error Condition=" '$(SignPassword)' == '' " Text="The sign password has not been defined." />
  </Target>
  <Target Name="SignMsiFiles" Condition=" '$(SignPassword)' != '' " DependsOnTargets="AssertSignPassword">
    <Message Text="MsiFile: %(MsiFile.Identity)" />
    <PropertyGroup>
      <SigntoolPath>..\Libraries\WinSDK\x86\signtool.exe</SigntoolPath>
    </PropertyGroup>
    <Exec Command='"$(SigntoolPath)" sign /f "$(SignFilePath)" /p "$(SignPassword)" /fd sha256 /tr "http://sha256timestamp.ws.symantec.com/sha256/timestamp" /td sha256 /v "%(MsiFile.Identity)"' />
  </Target>
  <Target Name="CreateExeSetup">
    <PropertyGroup>
      <Msi32Path Condition="$([System.String]::Equals(%(ProcessedMsiFile.Platform), 'x86')) ">$([System.IO.Path]::GetFullPath(%(ProcessedMsiFile.ProcessedFilePath)))</Msi32Path>
      <Msi64Path Condition="$([System.String]::Equals(%(ProcessedMsiFile.Platform), 'x64')) ">$([System.IO.Path]::GetFullPath(%(ProcessedMsiFile.ProcessedFilePath)))</Msi64Path>
    </PropertyGroup>
    <Message Text="Msi32Path: $(Msi32Path)" />
    <Message Text="Msi64Path: $(Msi64Path)" />
    <MSBuild Projects="..\Csv4180.Installer.EXE\ExeSetup.proj" Properties="Configuration=$(Configuration);AppVersion=$(AppVersion);Msi32Path=$(Msi32Path);Msi64Path=$(Msi64Path)" />
  </Target>
  <Target Name="CopySetupFile" DependsOnTargets="PrepareObjDirectory">
    
  </Target>
  <Target Name="SignSetupFile" Condition=" '$(SignPassword)' != '' " DependsOnTargets="AssertSignPassword">
    <Message Text="SignSetupFile" />
  </Target>
  <PropertyGroup>
    <BuildDependsOn>RebuildSolution;CopyMsiFiles;SignMsiFiles;CreateExeSetup;CopySetupFile;SignSetupFile</BuildDependsOn>
    <!--<CleanDependsOn>CleanDotNetInstallerCache</CleanDependsOn>-->
  </PropertyGroup>

  <Target Name="Build" DependsOnTargets="$(BuildDependsOn)" />
</Project>